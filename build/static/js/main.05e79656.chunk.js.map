{"version":3,"sources":["store/TodoListStore.js","store/MessageStore.js","components/TodoList/TodoList.js","hooks/usePrevious.js","components/Messages/Messages.js","App.js","store/createStoreProvider.js","index.js"],"names":["Context","React","createContext","nextId","useMessageStore","useContext","TodoList","addInputRef","useRef","_useTodoListStore","tasks","addTask","renameTask","removeTask","pushMessage","prevTasks","value","ref","useEffect","current","usePrevious","length","type","text","react_default","a","createElement","className","placeholder","onKeyDown","event","key","currentTarget","map","task","id","name","onChange","onClick","typeIcons","success","info","error","Messages","_useMessageStore","messages","removeMessage","message","concat","App","providers","components_TodoList_TodoList","components_Messages_Messages","StoreProvider","_ref","children","_useState","useState","_useState2","Object","slicedToArray","setTasks","useCallback","toConsumableArray","objectSpread","filter","Provider","setMessages","_ref2","lifetime","arguments","undefined","setTimeout","MessageStore_Context","reduce","tree","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.05e79656.chunk.js","sourcesContent":["import React, { useState, useCallback } from 'react';\n\nconst Context = React.createContext();\n\nlet nextId = 0;\n\nexport const TodoListProvider = ({children}) => {\n    const [tasks, setTasks] = useState([]);\n\n    const addTask = useCallback(name => setTasks(tasks => ([...tasks, {id: ++nextId, name}])), [setTasks]);\n    \n    const renameTask = useCallback((id, name) => setTasks(tasks => tasks.map(task => ({\n        ...task,\n        name: id === task.id ? name : task.name,\n    }))), [setTasks]);\n\n    const removeTask = useCallback(id => setTasks(tasks => tasks.filter((task) => id !== task.id)), [setTasks]);\n\n    const value = {\n        tasks,\n\n        addTask,\n        renameTask,\n        removeTask,\n    };\n\n    return <Context.Provider value={value}>\n        {children}\n    </Context.Provider>;\n};\n\nexport const useTodoListStore = () => React.useContext(Context);\n","import React, { useState, useCallback } from 'react';\n\nconst Context = React.createContext();\n\nlet nextId = 0;\n\nexport const MessageProvider = ({children}) => {\n    const [messages, setMessages] = useState([]);\n\n    const removeMessage = useCallback(id => setMessages(messages => messages.filter(message => message.id !== id)), [setMessages]);\n\n    const pushMessage = useCallback(({type, text}, lifetime = 4000) => {\n        const id = ++nextId;\n        setMessages(messages => [...messages, {id, type, text}]);\n        if (lifetime) {\n            setTimeout(() => removeMessage(id), lifetime);\n        }\n    }, [setMessages, removeMessage]);\n\n    const value = {\n        messages,\n\n        pushMessage,\n        removeMessage,\n    };\n\n    return <Context.Provider value={value}>\n        {children}\n    </Context.Provider>;\n};\n\nexport const useMessageStore = () => React.useContext(Context);\n","import React, { useRef, useEffect } from 'react';\nimport usePrevious from 'hooks/usePrevious';\n\nimport './TodoList.scss';\n\nimport { useTodoListStore } from 'store/TodoListStore';\nimport { useMessageStore } from 'store/MessageStore';\n\nconst TodoList = () => {\n\tconst addInputRef = useRef();\n\n\tconst {\n\t\ttasks,\n\t\t\n\t\taddTask,\n\t\trenameTask,\n\t\tremoveTask,\n\t} = useTodoListStore();\n\n\tconst {pushMessage} = useMessageStore();\n\n\tconst prevTasks = usePrevious(tasks);\n\n\tuseEffect(() => {\n\t\tif (prevTasks) {\n\t\t\tif (prevTasks.length < tasks.length) {\n\t\t\t\tpushMessage({type: 'success', text: 'New task added successfully!'});\n\t\t\t}\n\t\t\tif (prevTasks.length > tasks.length) {\n\t\t\t\tpushMessage({type: 'info', text: 'Task removed successfully!'});\n\t\t\t}\n\t\t}\n\t\t\n\t\taddInputRef.current.value = '';\n\t}, [addInputRef, tasks.length, pushMessage, prevTasks]);\n\n\treturn <div className={'TodoList'}>\n\t\t<div className={'TodoList__item'}>\n\t\t\t<div className={'TodoList__item__id'} />\n\t\t\t<input ref={addInputRef} placeholder={'Type new task and press Enter'} onKeyDown={event => event.key === 'Enter' && addTask(event.currentTarget.value)}/>\n\t\t\t<div className={'TodoList__item__remover'} />\n\t\t</div><hr />\n\t\t\n\t\t{tasks && tasks.map(task => {\n\t\t\treturn <div key={task.id} className={'TodoList__item'}>\n\t\t\t\t<div className={'TodoList__item__id'}>{task.id}</div>\n\t\t\t\t<input value={task.name} onChange={event => renameTask(task.id, event.currentTarget.value)} /> \n\t\t\t\t<div className={'TodoList__item__remover'} onClick={() => removeTask(task.id)}>Delete</div>\n\t\t\t</div>;\n\t\t})}\n\t</div>;\n};\n\nexport default TodoList;\n","import { useRef, useEffect } from 'react';\n\nexport default function usePrevious(value) {\n    const ref = useRef();\n    useEffect(() => {\n      ref.current = value;\n    });\n    return ref.current;\n}\n","import React from 'react';\n\nimport './Messages.scss';\nimport { useMessageStore } from 'store/MessageStore';\n\nconst typeIcons = {\n    success: 'âœ”',\n    info: 'âš ',\n    error: 'ðŸ’”',\n};\n\nconst Messages = () => {\n    const {\n        messages,\n        removeMessage,\n    } = useMessageStore();\n\n    return <div className={'Messages'}>\n        {messages.map(message => {\n            return <div className={`MessagesItem MessagesItem--${message.type}`} key={message.id}>\n                <div className={'MessagesItem__type'}>{typeIcons[message.type]}</div>\n                <div className={'MessagesItem__content'}>\n                    {message.text}\n                </div>\n                <div className={'MessagesItem__remover'} onClick={() => removeMessage(message.id)}>âš°</div>\n            </div>;\n        })}\n    </div>;\n};\n\nexport default Messages;\n","import React from 'react';\nimport './App.css';\nimport TodoList from 'components/TodoList/TodoList';\nimport Messages from 'components/Messages/Messages';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TodoList />\n      <Messages />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\n\nexport default providers => ({ children }) => providers.reduce((tree, Provider) => <Provider>{tree}</Provider>, children);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport createStoreProvider from 'store/createStoreProvider';\nimport { TodoListProvider } from 'store/TodoListStore';\nimport { MessageProvider } from 'store/MessageStore';\n\n\nconst StoreProvider = createStoreProvider([\n    TodoListProvider,\n    MessageProvider,\n]);\n\n// const SecondStoreProvider = createStoreProvider([\n//     OrdersProvider,\n// ]);\n\nReactDOM.render(<StoreProvider>\n    <App />\n</StoreProvider>, document.getElementById('root'));\n"],"sourceRoot":""}